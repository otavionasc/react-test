[{"C:\\Projetos\\react-test\\src\\index.js":"1","C:\\Projetos\\react-test\\src\\App.js":"2","C:\\Projetos\\react-test\\src\\components\\Filter\\index.js":"3","C:\\Projetos\\react-test\\src\\components\\Results\\index.js":"4","C:\\Projetos\\react-test\\src\\services\\api.js":"5"},{"size":196,"mtime":1612037977984,"results":"6","hashOfConfig":"7"},{"size":225,"mtime":1612447515087,"results":"8","hashOfConfig":"7"},{"size":2739,"mtime":1612447490698,"results":"9","hashOfConfig":"7"},{"size":221,"mtime":1612105465998,"results":"10","hashOfConfig":"7"},{"size":166,"mtime":1612447561840,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hmdyhc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projetos\\react-test\\src\\index.js",[],["24","25"],"C:\\Projetos\\react-test\\src\\App.js",[],"C:\\Projetos\\react-test\\src\\components\\Filter\\index.js",["26","27","28","29","30","31"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport {format} from 'date-fns';\r\n\r\nimport api from '../../services/api';\r\n\r\nfunction Filter() {\r\n    const [filters, setFilters] = useState([]);\r\n    const [token, setToken] = useState('');\r\n\r\n    // Pegando parâmetros obtidos após o login\r\n    const parametros = getHashParams();\r\n\r\n    function getHashParams() {\r\n        var hashParams = {};\r\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n        e = r.exec(q)\r\n        while (e) {\r\n        hashParams[e[1]] = decodeURIComponent(e[2]);\r\n        e = r.exec(q);\r\n        }\r\n        return hashParams;\r\n    };\r\n\r\n    // Objeto para pegar a data e hora atual\r\n    const now = {\r\n        date: format(new Date(), 'yyy-MM-dd'),\r\n        time: format(new Date(), 'HH:mm')\r\n    };\r\n\r\n    // Criando conexão com a API para trazer os filtros\r\n    const apiFilter = axios.create({\r\n        baseURL: 'http://www.mocky.io/v2/5a25fade2e0000213aa90776'\r\n    });\r\n\r\n    // Carregando filtros\r\n    async function loadFilters(){\r\n        await apiFilter.get()\r\n        .then(resp => { setFilters(resp.data.filters); })\r\n        .catch(err => { console.error(\"ocorreu um erro\" + err)});\r\n    };\r\n   \r\n    useEffect(() => {\r\n        loadFilters();\r\n      }, []);\r\n    \r\n    return(\r\n        <div>\r\n            <h1>Filtro</h1>\r\n            \r\n            <span>Tipos de Filtro</span><br/>\r\n            <select>\r\n                {filters.map(item => <option key={item.id}>{item.name}</option>)}\r\n            </select> <br/><br/>\r\n            <span>Locale</span><br/>\r\n            <select>\r\n                {filters.filter(x => x.id == 'locale').map(v => v.values.map(item => <option key={item.value}>{item.name}</option>))}\r\n            </select> <br/><br/>\r\n            <span>País</span><br/>\r\n            <select>\r\n                {filters.filter(x => x.id == 'country').map(v => v.values.map(item => <option key={item.value}>{item.name}</option>))}\r\n            </select> <br/><br/>\r\n\r\n            <span>Data e horário</span><br/>\r\n            <input type=\"date\" value={now.date}/>\r\n            <input type=\"time\" value={now.time}/> <br/><br/>\r\n\r\n            <span>Limite</span><br/>\r\n            <input type=\"number\" value=\"10\"/> <br/><br/>\r\n\r\n            <span>offset</span><br/>\r\n            <input type=\"number\" value=\"0\"/> <br/><br/>\r\n\r\n            <span>token</span><br/>\r\n            <input type=\"text\" value={parametros.access_token} readonly/> <br/><br/>\r\n\r\n            <button onClick={loadFilters}>CONSULTAR</button> <br/><br/>\r\n            <button><a href=\"http://localhost:8888\">Logar com Spotify</a></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","C:\\Projetos\\react-test\\src\\components\\Results\\index.js",[],"C:\\Projetos\\react-test\\src\\services\\api.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":11},{"ruleId":"36","severity":1,"message":"40","line":9,"column":12,"nodeType":"38","messageId":"39","endLine":9,"endColumn":17},{"ruleId":"36","severity":1,"message":"41","line":9,"column":19,"nodeType":"38","messageId":"39","endLine":9,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":46,"column":10,"nodeType":"44","endLine":46,"endColumn":12,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":58,"column":43,"nodeType":"48","messageId":"49","endLine":58,"endColumn":45},{"ruleId":"46","severity":1,"message":"47","line":62,"column":43,"nodeType":"48","messageId":"49","endLine":62,"endColumn":45},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadFilters'. Either include it or remove the dependency array.","ArrayExpression",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [loadFilters]",{"range":"55","text":"56"},[1316,1318],"[loadFilters]"]